DIRABBREV(1)          User Contributed Perl Documentation         DIRABBREV(1)



NNAAMMEE
       dirabbrev - dynamic abbreviations for directories (paths)

SSYYNNOOPPSSIISS
        alias da 'eval `dirabbrev -e -a \!*`'; da -d
        alias S 'da -s'
        alias G 'da -g'
        alias L 'da -l'
        alias R 'da -r'

        da -s name [directory]     # Store abbrev for directory
        S name [directory]         # Same as previous line, uses "S"
        L                          # List abbrevs
        G name                     # cd (go) to dir
        name                       # Same as previous line, using dynamic alias
        R name [name...]           # Remove a directory abbrev
        ls $name/*.eps             # Use environment variables

DDEESSCCRRIIPPTTIIOONN
       ddiirraabbbbrreevv is a dynamic way to define and use abbreviations for long
       directory paths.  The user assigns a simple name to a directory.
       ddiirraabbbbrreevv then automatically defines an alias and an environment
       variable corresponding to this name.  These can be used to quickly
       change to the abbreviated directory, and to use the abbreviations in
       any file specification in the shell.  Abbreviations are stored in a
       file and reinstalled in every new shell.

       ddiirraabbbbrreevv needs to be called through an alias or shell function.  For
       the (t)csh, the required alias is:

          # define da and immediately call it to initialize the environment.
          alias da 'eval `dirabbrev -e -a\!*`'
          da -d

       For sh/bash/ksh, you have to use a function:

          # define da and immediately call it to initialize the environment.
          function da () { eval `dirabbrev -e -a \$*`; }
          da -d

       If you don't want to define environment variables for the
       abbreviations, leave out the --ee switch from the definition.  If you
       don't want to define aliases for the abbreviations, leave out the --aa
       switch from the definition.

       With this definition you can call ddaa with different options, like ddaa --ss
       nnaammee etc.  For convenience, it is recommended to define additional
       aliases for "da -s", "da -g" etc, see above under SYNOPSIS.

OOPPTTIIOONNSS
       --ss name [directory]
            Store NAME as an abbreviation for DIRECTORY.  When DIRECTORY is
            omitted, the current working directory is used.  NAME is always
            converted to lower case.

       --ll   List the available abbreviations, sorted alphabetically.

       --LL   Same as --ll, but sorted by directory path.

       --hh [directory]
            List all abbreviations pointing to DIRECTORY.  When DIRECTORY is
            omitted, the current working directory is used.

       --gg name
            Use _c_d to change to the directory associated with the abbreviation
            NAME.  Name may also be a unique abbreviation of an abbreviation.

       --rr [name ...]
            Remove the abbreviation NAME from the list.  NAME may contain an
            exact name or a wildcard expression matching names.  If NAME is
            omitted, remove all abbreviations pointing to the current
            directory.

       --RR [name ...]
            Run a loop over all abbreviations and ask if any should be
            removed.  If arguments are given, only try abbreviations matching
            any of the given wildcard patterns.  When prompted, you can reply
            [y]es, [n]o, [a]ll, or [q]uit.

       --dd   Define environment variables and/or aliases for all directory
            abbreviations.  Must be combined with --ee and/or --aa switches.

       --uu   Undefine environment variables and aliases for all directory
            abbreviations.  Must be combined with --ee and/or --aa switches.

       --ee   Automatically track all abbreviations with corresponding
            environment variables.  This means, when a new abbreviation is
            defined/deleted with --ss/--rr, the corresponding environment variable
            will automatically be defined/removed.

       --aa   Automatically track all abbreviations with corresponding alias
            definitions.  This means, when a new abbreviation is
            defined/deleted with --ss/--rr, the corresponding alias will
            automatically be defined/removed.

       --SS shell
            Select the syntax appropriate for SHELL.  Supported shells are
            bash, sh, ksh, csh, and tcsh.  Normally ddiirraabbbbrreevv can figure out
            the correct shell syntax by itself, so this option is only a
            fallback for strange or buggy setups where this might not work.

       --vv   Verbose.  Write additional messages about what is happening to
            STDERR.

       --qq   Quiet. Write no messages at all.

       The options --ss, --ll, --hh, --gg, --rr are mutually exclusive.  The options --dd
       and --uu are mutually exclusive as well, but (for example) --ssddeevv is
       allowed.

EEXXAAMMPPLLEESS
       The examples below assume that the aliases "S", "L", "G", and "R" have
       been defined as shown above under SYNOPSIS (recommended).  If not, just
       replace these letters with "da -s" etc.

       Go to a directory and store "paper" as an abbreviation for it

           cd /home/dominik/tex/science/paper_vega_stars/version2
           S paper

       Go to another directory and store "poster" as an abbreviation for it

           cd ~/posters/workshop_copenhagen
           S poster

       List the available abbreviations

           L
           > paper  /home/dominik/tex/science/paper_vega_stars/version2
           > poster /home/dominik/posters/workshop_copenhagen

       Go back to the first directory.  ddiirraabbbbrreevv supports three different
       ways to do this:

           G paper                          # works always
           cd $paper                        # with environment variable tracking
           paper                            # with alias tracking

       List the .eps files in the poster directory.

           ls $poster/*eps

       Copy a file to the poster directory

           cp figure2.eps $poster/

       Remove all abbreviations starting with "p".  Note that wildcard
       characters have to be quoted to protect them from the shell.

           R p\*

       If a directory path contains space characters, environment variables
       must be enclosed in double quotes for correct interpretation in the
       shell.  For example, if _/_p_a_t_h_/_t_o _m_y_/_p_o_s_t_e_r is abbreviated as _p_o_s_t_e_r,
       you need to type commands like this:

           cd "$poster"
           cp "$poster"/*eps .

       Aliases defined by ddiirraabbbbrreevv as well as ddaa --gg work correctly also with
       such file names.

BBUUGGSS
       No known bugs.

AAUUTTHHOORR
       Carsten Dominik    <dominik@science.uva.nl>

       This program is free software.  See the source file for the full
       copyright notice.

FFIILLEESS
       The abbreviation list is stored in the file _~_/_._d_i_r_a_b_b_r_e_v.

SSEEEE AALLSSOO
       _c_s_h(1), _t_c_s_h(1), _s_h(1), _b_a_s_h(1), _k_s_h(1)

AACCKKNNOOWWLLEEDDGGMMEENNTTSS
       The idea for this command is due to Sacha Hony who also implemented it
       as a set of shell scripts.



perl v5.18.2                      2019-04-30                      DIRABBREV(1)
